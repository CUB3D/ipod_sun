pub trait ExploitConfig {
    /// This offset will write to the buildchar len
    const OFFSET_BUILDCHAR_LEN_PTR: u16;

    /// This offset will write to the buildchar ptr itself
    const OFFSET_BUILDCHAR_PTR: u16;

    /// This offset will write to LR
    /// In n5g emu this should be 23
    const OFFSET_LR: u16;

    /// Number of elements to push onto the CFF stack before swapping
    const PUSH_COUNT: usize;

    /// Number of pointer swaps to do to overwrite buildchar
    const SWAP_COUNT: usize;

    /// How many times to drop back down
    const DROP_COUNT: usize;

    /// Should the manufacturer string be patched
    const PATCH_MFG_STR: bool;

    /// What to overwrite `buildchar` with
    const BUILDCHAR_OVERWRITE_ADDR: u32;

    /// What offset to use for writing to `buildchar`
    const BUILDCHAR_WRITE_OFFSET: u16;
}

pub struct ExploitConfigN6G;
impl ExploitConfig for crate::payload::exploit_config::ExploitConfigN6G {
    const OFFSET_BUILDCHAR_LEN_PTR: u16 = 120;
    const OFFSET_BUILDCHAR_PTR: u16 = Self::OFFSET_BUILDCHAR_LEN_PTR - 1;
    const OFFSET_LR: u16 = Self::OFFSET_BUILDCHAR_LEN_PTR + 24;
    const PUSH_COUNT: usize = 43;
    const SWAP_COUNT: usize = 128;
    const DROP_COUNT: usize = Self::SWAP_COUNT + 17;
    const PATCH_MFG_STR: bool = true;
    const BUILDCHAR_OVERWRITE_ADDR: u32 = 0x0800_0000_u32;
    const BUILDCHAR_WRITE_OFFSET: u16 = 0x5024;
}

pub struct ExploitConfigN7G;
impl ExploitConfig for ExploitConfigN7G {
    const OFFSET_BUILDCHAR_LEN_PTR: u16 = 120;
    const OFFSET_BUILDCHAR_PTR: u16 = Self::OFFSET_BUILDCHAR_LEN_PTR - 1;
    const OFFSET_LR: u16 = Self::OFFSET_BUILDCHAR_LEN_PTR + 24;
    const PUSH_COUNT: usize = 43;
    const SWAP_COUNT: usize = 128;
    const DROP_COUNT: usize = Self::SWAP_COUNT + 17;
    const PATCH_MFG_STR: bool = false;
    const BUILDCHAR_OVERWRITE_ADDR: u32 = 0x0819_c458_u32;
    const BUILDCHAR_WRITE_OFFSET: u16 = 0;
}

pub struct ExploitConfigN5GEmu;
impl ExploitConfig for ExploitConfigN5GEmu {
    const OFFSET_BUILDCHAR_LEN_PTR: u16 = 120;
    const OFFSET_BUILDCHAR_PTR: u16 = Self::OFFSET_BUILDCHAR_LEN_PTR - 1;
    const OFFSET_LR: u16 = Self::OFFSET_BUILDCHAR_LEN_PTR + 23;
    const PUSH_COUNT: usize = 43;
    const SWAP_COUNT: usize = 128;
    const DROP_COUNT: usize = Self::SWAP_COUNT + 17;
    const PATCH_MFG_STR: bool = false;
    const BUILDCHAR_OVERWRITE_ADDR: u32 = 0x0800_0000_u32;
    const BUILDCHAR_WRITE_OFFSET: u16 = 0x5024;
}
